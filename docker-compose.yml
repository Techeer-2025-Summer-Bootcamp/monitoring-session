services:
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=false"
      - "--providers.docker=true" 
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entryPoints.dashboard.address=:8090"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filepath=/traefik/logs/access.log"
      - "--accesslog.bufferingsize=100"
      - "--accesslog.format=json"
      - "--accesslog.fields.defaultmode=keep"
      - "--accesslog.fields.headers.defaultmode=keep"
      - "--accesslog.fields.headers.names.X-Forwarded-For=keep"
      - "--api.dashboard=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entryPoints.metrics.address=:8091"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--tracing=true"
      - "--tracing.otlp=true"
      - "--tracing.otlp.grpc.insecure=true"
      - "--tracing.otlp.grpc.endpoint=localhost:4317"
      - "--tracing.serviceName=traefik"
      - "--tracing.sampleRate=1.0"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 8090
        published: 8090
        protocol: tcp
        mode: host
      - target: 8091
        published: 8091
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "traefik_logs:/traefik/logs/"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.cloudsession.cloud`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8090"
      - "traefik.http.routers.dashboard.entrypoints=web"

  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.fastapi.loadbalancer.server.port=8000"
      - "traefik.http.routers.fastapi.rule=Host(`fastapi.cloudsession.cloud`)"
      - "traefik.http.routers.fastapi.entrypoints=web"
  
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_data:/etc/grafana/provisioning
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.rule=Host(`grafana.cloudsession.cloud`)"
      - "traefik.http.routers.grafana.entrypoints=web"

  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.8.1
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.rule=Host(`portainer.cloudsession.cloud`)"
      - "traefik.http.routers.portainer.entrypoints=web"

volumes:
  traefik_logs:
  grafana_data:
  portainer_data:
